
#CFG_STANDALONE=1
#CFG_GDB=1

ifeq ($(CFG_STANDALONE),1)

ARCH=armeabi
#ARCH=linux_x86_32
#ARCH=mac_x86_64

CC = gcc
AR = ar
RANLIB = ranlib
MKDIR = mkdir
CP = cp
STRIP = strip
RM = /bin/rm -rf
BUILD_DIR=bin_$(ARCH)

# compiler/linker flags
LDFLAGS =
CFLAGS = -ggdb -Wall -O2 -D_REENTRANT
DEFS= -DARCH_$(ARCH)


LIB_PTHREAD=-lpthread

#ifeq ($(ARCH),armeabi)
#  #utilize android logging
#  DEFS+=-DANDROID_LOG
#  LIBS_EXE+=-llog
#  -include ./config.mak.armeabi
#  THIRDPARTYPATH=../third-party/${ARCH}
#  FFMPEGPATH=${THIRDPARTYPATH}/ffmpeg-0.6.1_armeabi
#  LIBX264_DIR=${THIRDPARTYPATH}/x264-snapshot-20100605-2245_armeabi
#  LIBFAAC_DIR=${THIRDPARTYPATH}/faac-1.28_armeabi
#  LIBOPENCOREAMR_DIR=${THIRDPARTYPATH}/opencore-amr-0.1.2_armeabi
#else
#  THIRDPARTYPATH=../third-party/${ARCH}
#  FFMPEGPATH=${THIRDPARTYPATH}
#  LIBX264_DIR=${THIRDPARTYPATH}
#  LIBFAAC_DIR=${THIRDPARTYPATH}
#  LIBOPENCOREAMR_DIR=${THIRDPARTYPATH}
#endif


OBJS = ${BUILD_DIR}/logutil.o
INCLUDE_DIRS += -I./include/compat

# ... ifeq ($(CFG_STANDALONE),1)...
else

-include ../makefiles/Makefile.conf

OBJS=
INCLUDE_DIRS += -I../makefiles \
	        -I../liblogutil/include \
                -I../libcommonutil/include \
                -I../include \
                -I../version/include

ifeq ($(CFG_HAVE_PIP),1)
OBJS_PIP += ${BUILD_DIR}/xcoder_pip.o 
endif

ifeq ($(CFG_HAVE_PIP_AUDIO),1)
OBJS_PIP += ${BUILD_DIR}/mixer/conference.o \
	    ${BUILD_DIR}/mixer/configfile.o \
	    ${BUILD_DIR}/mixer/frameq.o \
	    ${BUILD_DIR}/mixer/mixer.o \
	    ${BUILD_DIR}/mixer/mixer_source.o \
	    ${BUILD_DIR}/mixer/participant.o \
	    ${BUILD_DIR}/mixer/participant_ondata.o \
	    ${BUILD_DIR}/mixer/ringbuf.o \
	    ${BUILD_DIR}/mixer/audio_preproc.o \
	    ${BUILD_DIR}/mixer/util.o \
	    ${BUILD_DIR}/mixer/wav.o 
endif


ifeq ($(CFG_HAVE_FILTER),1)
  OBJS_FILTER += ${BUILD_DIR}/xcoder_filter.o 
endif

ifneq ($(HAVE_THIRDPARTY_SO),1)
  LIBS_EXE  += ../liblogutil/${BUILD_DIR}/liblogutil.a \
               ../libcommonutil/${BUILD_DIR}/libcommonutil.a
  #LIBS_EXE += ../xcode/${BUILD_DIR}/libixcode.a
endif


# ... ifeq ($(CFG_STANDALONE),1)...
endif

ifeq ($(CFG_XCODE_PNG),1)
#  LIB_ZLIB=-lz
  LIBS_ZLIB=${THIRDPARTYPATH}/zlib/lib/libz_static.a
endif

#
# libx264 H.264 video codec
#
ifeq ($(CFG_XCODE_X264),1)
  #LIBX264PATH is defined in makefiles/Makefile.conf

  ifeq ($(CFG_XCODE_X264_DLOPEN),1)
    OBJS_X264 += ${BUILD_DIR}/xcoder_x264.o
    LIBS_EXT_X264=
  else

    ifeq ($(CFG_XCODE_X264_AVCODEC),1)
      OBJS_X264 += ${BUILD_DIR}/libx264.o
    else
      OBJS_X264 += ${BUILD_DIR}/xcoder_x264.o
    endif

    LIBS_EXT_X264+=${LIBX264_DIR}/libx264_static.a
  endif
else
  LIB_DLOPEN+=
endif


#
# AMR-nb audio codec
#
ifeq ($(CFG_XCODE_OPENCOREAMR),1)
  #LIBOPENCOREAMR_DIR is defined in makefiles/Makefile.conf
  LIBS_EXT_AMR+=${LIBOPENCOREAMR_DIR}/libopencore-amrnb.a
endif

#
# Vorbis audio codec
#
ifeq ($(CFG_XCODE_VORBIS), 1)
  VORBIS_DIR=${THIRDPARTYPATH}/libvorbis-1.3.2
  LIBS_EXT_VORBIS=${VORBIS_DIR}/libvorbis.a  ${VORBIS_DIR}/libvorbisenc.a ${VORBIS_DIR}/libogg.a 
endif

#
# VP8 video codec
#
ifeq ($(CFG_XCODE_VP8), 1)
  VP8_DIR=${THIRDPARTYPATH}/libvpx
  LIBS_EXT_VP8=${VP8_DIR}/libvpx.a
  OBJS_VP8 += ${BUILD_DIR}/libvpxenc.o 
endif


#
# SPEEX audio codec and SPEEX audio processor
#
ifeq ($(CFG_XCODE_SPEEX), 1)
  SPEEX_DIR=${THIRDPARTYPATH}/speex-1.2rc1
  LIBS_EXT_SPEEX= ${SPEEX_DIR}/libspeex.a  ${SPEEX_DIR}/libspeexdsp.a
  INCLUDE_EXT_SPEEX= -I${SPEEX_DIR}
endif

#
# SILK audio codec
#
ifeq ($(CFG_XCODE_SILK), 1)
  SILK_DIR=${THIRDPARTYPATH}/silk
  INCLUDE_EXT_SILK= -I${SILK_DIR}
  ifeq ($(CFG_XCODE_SILK_DLOPEN),1)
    LIBS_EXT_SILK= 
  else
    LIBS_EXT_SILK=${SILK_DIR}/libSKP_SILK_SDK.a
  endif
  OBJS_SILK += ${BUILD_DIR}/xcoder_silk.o 
endif

#
# Opus audio codec
#
ifeq ($(CFG_XCODE_OPUS), 1)
  OPUS_DIR=${THIRDPARTYPATH}/opus-1.0.3
  INCLUDE_EXT_OPUS= -I${OPUS_DIR}/include
  ifeq ($(CFG_XCODE_OPUS_DLOPEN),1)
    LIBS_EXT_OPUS= 
  else
    LIBS_EXT_OPUS=${OPUS_DIR}/lib/libopus_float_static.a
    #LIBS_EXT_OPUS=${OPUS_DIR}/lib/libopus_fixedpoint_static.a
    #LIBS_EXT_OPUS=${OPUS_DIR}/lib/libopus_floatapprox_static.a
  endif
  OBJS_OPUS += ${BUILD_DIR}/xcoder_opus.o 
endif

#
# libfaac AAC encoder
#
ifeq ($(CFG_XCODE_FAAC), 1)
  #LIBFAAC_DIR is defined in makefiles/Makefile.conf
  ifeq ($(CFG_XCODE_FAAC_DLOPEN),1)
    LIBS_EXT_AAC=
  else
    LIBS_EXT_AAC+=${LIBFAAC_DIR}/libfaac_static.a
  endif
  OBJS_AAC += ${BUILD_DIR}/xcoder_faac.o 
endif

#
# Webrtc audio VAD and (noise) signal processing
#
ifeq ($(CFG_XCODE_WEBRTC_VAD), 1)
  WEBRTC_DIR=${THIRDPARTYPATH}/webrtc
  LIBS_EXT_WEBRTC_VAD= \
                       ${WEBRTC_DIR}/common_audio/signal_processing/libsignal_processing.a \
                       ${WEBRTC_DIR}/common_audio/vad/libvad.a 
  INCLUDE_EXT_WEBRTC_VAD= -I${WEBRTC_DIR}
endif

